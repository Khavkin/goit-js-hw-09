{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAEMC,EAAOC,SAASC,cAAc,SACpCC,EAAAC,OAAOC,KAAK,CAAEC,SAAU,eAyBxB,SAASC,EAAcD,EAAUE,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEJ,WAAUE,UAGpBG,EAAO,CAAEL,WAAUE,S,GAEpBA,E,IAbPR,EAAKe,iBAAiB,UArBL,SAAAC,GACfA,EAAMC,iBASN,IARA,IACgCC,EAACC,EAAArB,EAAD,CAAIkB,EAAMI,QACvCC,QAAO,SAAAC,G,MAAqB,UAAfA,EAAGC,O,IAChBC,QAAO,SAACC,EAAQC,GAEf,OADAD,EAAOC,EAAQC,MAAQC,OAAOC,SAASH,EAAQI,OACxCL,C,GACN,IALGM,EAAwBb,EAAxBa,OAAQC,EAAgBd,EAAhBV,MAAOyB,EAASf,EAATe,KAOdC,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAC/B3B,EAAc2B,EAAI,EAAGF,EAAQC,EAAOC,GACjCC,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUE,EAAK4B,EAAL5B,MACjBL,EAAAC,OAAOiC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN9B,EAAM,M,IAE9D+B,OAAM,SAAAH,G,IAAG9B,EAAQ8B,EAAR9B,SAAUE,EAAK4B,EAAL5B,MAClBL,EAAAC,OAAOoC,QAAQ,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nNotify.init({ position: 'center-top' });\n\nconst onSubmit = event => {\n  event.preventDefault();\n  const promises = [];\n  const { amount, delay, step } = [...event.target]\n    .filter(el => el.tagName === 'INPUT')\n    .reduce((result, current) => {\n      result[current.name] = Number.parseInt(current.value);\n      return result;\n    }, {}); // get values from form elements;\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        //resolve\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$8nrFW","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$h6c0i","Notify","init","position","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","ref","$parcel$interopDefault","target","filter","el","tagName","reduce","result","current","name","Number","parseInt","value","amount","delay1","step","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.14038af6.js.map"}